plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id "jacoco"
    id "com.gradle.plugin-publish" version "0.10.1"
    id 'org.ajoberstar.reckon' version "0.12.0"
    id "org.sonarqube" version "2.8"
    id "be.vbgn.ci-detect" version "0.3.0"
}
group 'be.vbgn.gradle'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom(testCompile)
    integrationTestRuntime.extendsFrom(testRuntime)
}

test {
    maxParallelForks = 8
}

task integrationTest(type: Test, group: "verification") {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    maxParallelForks = 8
    failFast = ci.isCi()
    dependsOn(publishToMavenLocal)
    doFirst {
        systemProperty "pluginVersion", project.version
    }
}

integrationTest.shouldRunAfter(test)
check.dependsOn(tasks.withType(Test))

jacocoTestReport {
    executionData(tasks.withType(Test))
    reports {
        xml.enabled = true
        html.enabled = !ci.isCi()
    }
    dependsOn(check)
}

sonarqube {
    properties {
        properties["sonar.tests"] += sourceSets.integrationTest.allSource.srcDirs
        properties["sonar.coverage.jacoco.xmlReportPaths"] = jacocoTestReport.reports.xml.destination
        if (ci.isCi()) {
            if (ci.isPullRequest()) {
                properties["sonar.pullrequest.branch"] = ci.branch
                properties["sonar.pullrequest.base"] = ci.pullRequestTargetBranch
                properties["sonar.pullrequest.key"] = ci.pullRequest
            } else {
                properties["sonar.branch.name"] = ci.reference
            }
        }
    }
}
tasks.sonarqube.dependsOn(check, jacocoTestReport)

javadoc {
    exclude '**/internal/**'
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile gradleTestKit()
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.1.0'
    integrationTestCompile group: 'commons-io', name: 'commons-io', version: '2.6'
}

gradlePlugin {
    plugins {
        pluginUpdates {
            id = "be.vbgn.plugin-updates"
            implementationClass = "be.vbgn.gradle.pluginupdates.PluginUpdatesPlugin"
        }
        config {
            id = "be.vbgn.plugin-updates.config"
            implementationClass = "be.vbgn.gradle.pluginupdates.ConfigurationPlugin"
        }
    }
}

pluginBundle {
    vcsUrl = "https://github.com/vierbergenlars/plugin-updates-gradle-plugin"
    website = vcsUrl
    description = "A gradle plugin that automatically notifies about plugins that can be updated."
    tags = ["plugin", "update", "gradle-updates"]
    plugins {
        pluginUpdates {
            displayName = "Plugin updates plugin"
        }
        config {
            displayName = "Plugin updates plugin configuration"
        }
    }
}

reckon {
    scopeFromProp()
    snapshotFromProp()
}

reckonTagCreate.dependsOn(check)
